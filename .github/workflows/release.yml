name: "Release Pipeline"
on:
  push:
    branches:
      - main
      - develop
jobs:
  release:
    if: github.repository == 'adracea/WebGoat'
    name: Release WebGoat
    runs-on: ubuntu-latest
    # environment:
    #   name: release
    steps:
      - uses: actions/checkout@v3

      - name: "Get tag name"
        id: tag
        run: echo '::set-output name=tag::$(date +%Y%m%d).${{github.run_number}}'

      - name: Set up JDK 15
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v3.0.3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Set labels for ${{ github.ref }}"
        run: |
          echo "WEBGOAT_TAG_VERSION=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV
          WEBGOAT_MAVEN_VERSION=${{ steps.tag.outputs.tag }}
          echo "WEBGOAT_MAVEN_VERSION=${WEBGOAT_MAVEN_VERSION:1}" >> $GITHUB_ENV
      - name: Whitesource Scan
        # You may pin to the exact commit or the version.
        # uses: mercari/Whitesource-Scan-Action@3f1da7a9de1055f39f740a4f4aac24fa928eed30
        uses: adracea/universalws@master
        with:
          # The relevent URL to your orgs WS Server. Can be found under the Integrate tab of your Whitesource dashboard (e.g. https://app-eu.whitesourcesoftware.com/agent).
          wssUrl: https://saas.whitesourcesoftware.com
          # API key from Whitesource.
          apiKey: ${{secrets.WS_ORG_TOKEN}}
          # Name of the Product that this project falls under.
          productName: Sbom-test # optional
          path: /home/runner/work/WebGoat/WebGoat
          # Name of the Project. Repository name if not set. Default: Repository Name without owner.
          projectName: test1 # optional
          # Filename of whitesource configuration if being used (including file path)
          agentConfig: ./agent.conf
      
      - name: "SBOM With WhiteSource"
        run: |
          pip install ws-sbom-generator
          var=$(pip show ws-sbom-generator | grep Location: | sed -n -e 's/Location: //p')/ws_sbom_generator/sbom_generator.py
          python $var -u ${{secrets.WS_USER_KEY}} -k ${{secrets.WS_ORG_TOKEN}} -a https://saas.whitesourcesoftware.com -t json -s ${{secrets.WS_PROJECT_TOKEN}} -y product -o /home/runner/work/WebGoat/WebGoat/target/ -on webgoat-${{ steps.tag.outputs.tag }}
      - name: Build with Maven
        run: |
          mvn --no-transfer-progress versions:set -DnewVersion=${{ steps.tag.outputs.tag }}
          mvn --no-transfer-progress install -DskipTests

      - name: "Create release"
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            /home/runner/work/WebGoat/WebGoat/target/webgoat-${{ steps.tag.outputs.tag }}.jar
            /home/runner/work/WebGoat/WebGoat/target/webgoat-${{ steps.tag.outputs.tag }}-SPDX-2.2.json
          body: |
            ## Version ${{ steps.tag.outputs.tag }}

            ### New functionality

            - test

            ### Bug fixes

            - [#743 - Character encoding errors](https://github.com/WebGoat/WebGoat/issues/743)


            ## Contributors

            Special thanks to the following contributors providing us with a pull request:

            - Person 1
            - Person 2

            And everyone who provided feedback through Github.


            Team WebGoat
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # new_version:
  #   permissions:
  #     contents: write  # for Git to git push
  #   if: github.repository == 'adracea/WebGoat'
  #   name: Update development version
  #   needs: [ release ]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: release
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: develop
  #         token: ${{ secrets.WEBGOAT_DEPLOYER_TOKEN }}

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: 17
  #         architecture: x64

  #     - name: Set version to next snapshot
  #       run: |
  #         mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT versions:commit

  #     - name: Commit pom.xml
  #       run: |
  #         git config user.name adracea
  #         git config user.email adracea@gmail.com
  #         find . -name 'pom.xml' | xargs git add
  #         git commit -m "Updating to the new development version"
  #         git push
